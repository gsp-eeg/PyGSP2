[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "PyGSP2"
version = "2.0.3"
authors = [
  { name="Julio Rodino", email="jrodino14@gmail.com" },
  { name="Alejandro Weinstein", email="alejandro.weinstein@gmail.com"},
  { name="Andres Herrera", email="herrerandresc@gmail.com"},
  { name="Camilo Jara", email="camilo.jara@ug.uchile.cl"},
  { name="Lucas CortÃ©s", email="lucascortesg@gmail.com"}
]
description = "Package for EEG Graph signal Processing"
readme = "README.rst"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
]
dependencies= [
    "numpy",
    "scipy",
    "pandas",
    "networkx",
    "geopy",
    "matplotlib",
    "unidecode",
    "utm",
    "pyxlsb"
]


[project.urls]
Homepage = "https://github.com/gsp-eeg/PyGSP2"
Issues = "https://github.com/gsp-eeg/PyGSP2/issues"



[tool.ruff]
exclude = [
    "doc",
    "docs",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv"
]
line-length = 108
indent-width = 4
show-fixes = true
fix = true
unsafe-fixes = true
target-version = "py311"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "Q", "D"]
ignore = ["F401", "D205", "E731", "F821", "F841", "E741", "D100", "D101", "D102", "D103", "D104", "D105", "D401"]
extend-select = ["D400"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.lint.isort]
lines-after-imports = 1
lines-between-types = 1
length-sort = true
order-by-type = true
detect-same-package = true
from-first = false
section-order = ["future", "standard-library", "first-party", "local-folder", "third-party"]
combine-as-imports = true

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = false
max-doc-length = 108
max-line-length = 130

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"


[tool.yapf]
based_on_style = "pep8"
split_before_named_assigns = false
split_before_expression_after_opening_paren = false
column_limit = 130


[tool.isort]
skip = ["__init__.py"]
